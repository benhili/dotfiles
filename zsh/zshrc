: '
             ________________________________________________
            /                                                \
           |    _________________________________________     |
           |   |  ~/dotfiles/zsh master*                 |    |
           |   |  ðŸŒŠ zsh                                 |    |
           |   |                                         |    |
           |   |                                         |    |
           |   |                                         |    |
           |   |                                         |    |
           |   |                                         |    |
           |   |                                         |    |
           |   |                                         |    |
           |   |                                         |    |
           |   |                                         |    |
           |   |                                         |    |
           |   |                                         |    |
           |   |_________________________________________|    |
           |                                                  |
            \_________________________________________________/
                   \___________________________________/
                ___________________________________________
             _--    .-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.  --- --_
          _--.-.-. .---.-.-.-.-.-.-.-.-.-.-.-.-.-.-.--.  .-.-.--_
       _--.-.-.-. .---.-.-.-.-.-.-.-.-.-.-.-.-.-.-.--__-. .-.-.-.--_
    _--.-.-.-.-. .-----.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-----. .-.-.-.-.--_
 _--.-.-.-.-.-. .---.-. .-------------------------. .-.---. .---.-.-.-.--_
:-------------------------------------------------------------------------:
----._.-------------------------------------------------------------._.----

'
configPath="$HOME/dotfiles/zsh"
source $configPath/aliases
source $configPath/plugins

path+=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin/~/.emacs.d/bin:~/.composer/vendor/bin
export PATH

HISTFILE=~/.zsh_history
HISTSIZE=999999999
SAVEHIST=$HISTSIZE

# Node memory allocation
export NODE_OPTIONS=--max_old_space_size=4096

# FZF use ripgrep (for .gitignore filtering)
export FZF_DEFAULT_COMMAND='rg --files'

# setup nodenv
eval "$(nodenv init -)"

# Pure prompt config
zstyle :prompt:pure:path color green
zstyle ':prompt:pure:prompt:*' color yellow

# Î» in case the emoji gets obnoxious
PURE_PROMPT_SYMBOL="Î»"

# FD to escape vim insert mode
bindkey -M viins 'fd' vi-cmd-mode

# Required for Ranger
export EDITOR="nvim"

# TODO delete these when/if I stop working with serverless
# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /Users/hero/Dev/linktr.ee/node_modules/tabtab/.completions/serverless.zsh ]] && . /Users/hero/Dev/linktr.ee/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /Users/hero/Dev/linktr.ee/node_modules/tabtab/.completions/sls.zsh ]] && . /Users/hero/Dev/linktr.ee/node_modules/tabtab/.completions/sls.zsh
# tabtab source for slss package
# uninstall by removing these lines or running `tabtab uninstall slss`
[[ -f /Users/hero/Dev/linktr.ee/node_modules/tabtab/.completions/slss.zsh ]] && . /Users/hero/Dev/linktr.ee/node_modules/tabtab/.completions/slss.zsh

# ðŸ¤”
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Gotta have it :) the \e[35m is a magenta color code
if [ `which fortune` ]; then
    echo ""
    echo "\e[35m$(fortune)"
fi

# Allows pyenv to manage our shell path 
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

# Proxy
function proxyon
{
	# Set proxy system variables
	http_proxy=http://internet-proxy.dc.vodafone.com.au:8080
    https_proxy=http://internet-proxy.dc.vodafone.com.au:8080
    no_proxy=localhost,127.0.0.1
    HTTP_PROXY=$http_proxy
    HTTPS_PROXY=$https_proxy
    export http_proxy https_proxy no_proxy HTTP_PROXY HTTPS_PROXY
    # Git configuration for internet proxy
    git config --global http.proxy $http_proxy
    git config --global https.proxy $http_proxy
    # Curlrc
    echo "proxy = ${http_proxy}" > ~/.curlrc
    # Npmrc
    npm config set proxy $http_proxy
    echo "Proxy is ON"
}
# No Proxy
function proxyoff
{
    git config --global --unset http.proxy
    git config --global --unset https.proxy
    http_proxy=""
    https_proxy=""
    HTTP_PROXY=$http_proxy
    HTTPS_PROXY=$https_proxy
    export http_proxy https_proxy HTTP_PROXY HTTPS_PROXY
    echo "" > ~/.curlrc
    npm config delete proxy
    echo "Proxy is OFF"
}
