{
  "editor.fontFamily": "FiraCode Nerd Font",
  "editor.fontSize": 14,
  "terminal.integrated.fontSize": 14,
  "editor.fontLigatures": true,
  "workbench.fontAliasing": "antialiased",
  "files.exclude": {
    ".svn": true,
    ".git": true,
    ".hg": true,
    "CVS": true,
    "lib": true,
    "node_modules": true,
    "dist": true,
    "coverage": true,
    "_warmup": true,
    ".terraform": true,
    ".terragrunt-cache": true,
    ".webpack": true,
    ".serverless": true,
    "app/cache": true,
    "app/vendor": false,
    "psalm-report.json": true
  },
  "editor.renderWhitespace": "trailing",
  "vim.neovimPath": "/usr/local/bin/nvim",
  "vim.sneak": true,
  "vim.leader": " ",
  "vim.insertModeKeyBindings": [
    {
      "before": [
        "f",
        "d"
      ],
      "after": [
        "<Esc>"
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "<leader>",
        "w",
        "l"
      ],
      "commands": [
        "workbench.action.focusRightGroup"
      ]
    },
    {
      "before": [
        "<leader>",
        "w",
        "h"
      ],
      "commands": [
        "workbench.action.focusLeftGroup"
      ]
    },
    {
      "before": [
        "<leader>",
        "w",
        "j"
      ],
      "commands": [
        "workbench.action.focusBelowGroup"
      ]
    },
    {
      "before": [
        "<leader>",
        "w",
        "k"
      ],
      "commands": [
        "workbench.action.focusAboveGroup"
      ]
    },
    {
      "before": [
        "<leader>",
        "w",
        "d"
      ],
      "commands": [
        "workbench.action.closeActiveEditor"
      ]
    },
    {
      "before": [
        "<leader>",
        "w",
        "\\"
      ],
      "commands": [
        "workbench.action.splitEditor"
      ]
    },
    {
      "before": [
        "<leader>",
        "w",
        "v"
      ],
      "commands": [
        "workbench.action.splitEditorOrthogonal"
      ]
    },
    {
      "before": [
        "<leader>",
        "t"
      ],
      "commands": [
        "workbench.action.terminal.toggleTerminal"
      ]
    },
    {
      "before": [
        "<leader>",
        "e"
      ],
      "commands": [
        "workbench.view.explorer"
      ]
    },
    {
      "before": [
        "<leader>",
        "g",
        "s"
      ],
      "commands": [
        "magit.status"
      ]
    },
    {
      "before": [
        "<leader>",
        "g",
        "t"
      ],
      "commands": [
        "go.test.package"
      ]
    },
    {
      "before": [
        "<leader>",
        "g",
        "c"
      ],
      "commands": [
        "go.test.coverage"
      ]
    },
  ],
  // formatting
  "editor.formatOnSave": true,
  "[go]": {
    "editor.defaultFormatter": "golang.go",
  },
  "go.coverOnSingleTest": true,
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml"
  },
  "[sass]": {
    "editor.formatOnSave": false
  },
  // misc
  "diffEditor.renderSideBySide": true,
  "git.autofetch": true,
  "workbench.sideBar.location": "right",
  "yaml.validate": false,
  "workbench.iconTheme": "material-icon-theme",
  "go.lintOnSave": "file",
  "go.lintTool": "golint",
  "redhat.telemetry.enabled": false,
  "explorer.confirmDragAndDrop": false,
  "workbench.colorTheme": "Alabaster",
  "editor.suggestSelection": "first",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "git.path": "/usr/bin/git",
  "go.toolsManagement.autoUpdate": true,
  "gitlens.advanced.messages": {
    "suppressGitMissingWarning": true
  },
  "editor.minimap.enabled": false,
  "[clojure]": {
    "editor.autoClosingBrackets": "always",
    "editor.autoClosingOvertype": "always",
    "editor.formatOnPaste": true
  },
  "calva.paredit.defaultKeyMap": "strict",
  "calva.prettyPrintingOptions": {
    "enabled": true,
    "width": 120,
    "maxLength": 50,
    "printEngine": "pprint"
  },
  "window.titleBarStyle": "custom",
  "vim.easymotion": true,
  "vim.incsearch": true,
  "search.useReplacePreview": true,
  "python.formatting.provider": "black",
  "diffEditor.ignoreTrimWhitespace": false,
  "ruby.useLanguageServer": true, // use the internal language server (see below)
  "ruby.lint": {
    "rubocop": {
      "useBundler": false
    },
  },
  "ruby.format": "rubocop",
  "[ruby]": {
    "editor.defaultFormatter": "rebornix.ruby"
  } // use rubocop for formatting
}